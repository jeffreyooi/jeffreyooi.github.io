{"version":3,"sources":["assets/email.svg","assets/instagram.svg","assets/linkedin.svg","assets/image.jpg","component/Section.tsx","component/section/About.tsx","component/section/Connect.tsx","component/section/Experience.tsx","component/section/Footer.tsx","component/section/Header.tsx","component/section/Hero.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Section","props","Container","title","body","About","ConnectPanel","className","href","Image","src","EmailIcon","target","rel","LinkedInIcon","InstagramIcon","experienceList","company","companyLink","role","startDate","endDate","jobScope","ExperiencePanel","Tab","defaultActiveKey","Row","Col","sm","Nav","variant","map","value","_","Item","Link","eventKey","style","backgroundColor","Content","Pane","color","index","key","Footer","Header","Navbar","expand","Brand","Hero","md","ProfileImage","roundedCircle","height","App","background","Experience","Connect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.226b579c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.080cf809.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.54b8ef4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.0621d6d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/image.96f0c2a4.jpg\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\ninterface SectionProps {\r\n  title?: string;\r\n  body?: any;\r\n}\r\n\r\nfunction Section(props: SectionProps) {\r\n  return (\r\n    <Container>\r\n      <h1>{props.title}</h1>\r\n      {props.body}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport Section from '../Section';\r\n\r\nfunction About() {\r\n  const body = (\r\n    <p>\r\n      Hi there! I'm Jeffrey, a software engineer based in Singapore.\r\n      <br></br><br></br>\r\n      I enjoy solving problems, and I'm constantly looking out for new things to learn.\r\n      During my university years, I took up part-time jobs as mobile app and game developer\r\n      to gain hands-on experience and knowledge about the field and industry.\r\n      <br></br><br></br>\r\n      After graduating from National University of Singapore with Bachelor Degree in Computer Science, \r\n      I joined Shopee's engineering team where I work as a backend software engineer.\r\n    </p>\r\n  );\r\n\r\n  return (\r\n    <Section title=\"About me\" body={body} />\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Section from '../Section';\r\n\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport EmailIcon from '../../assets/email.svg';\r\nimport InstagramIcon from '../../assets/instagram.svg';\r\nimport LinkedInIcon from '../../assets/linkedin.svg';\r\n\r\nfunction ConnectPanel() {\r\n  const body = (\r\n    <div>\r\n      <p>\r\n        I'm currently not open for new opportunities, but I'm always open to connecting with people and form new connections. \r\n        You can always reach out to me on the following platforms:\r\n      </p>\r\n      <Container className=\"footer\">\r\n        <a href=\"mailto:jeffreyooihs@gmail.com\"><Image src={EmailIcon} /></a>\r\n        <a href=\"https://www.linkedin.com/in/jeffreyooi\" target=\"_blank\" rel=\"noopener noreferrer\"><Image src={LinkedInIcon} /></a>\r\n        <a href=\"https://www.instagram.com/jeffrey_ooi\" target=\"_blank\" rel=\"noopener noreferrer\"><Image src={InstagramIcon} /></a>\r\n      </Container>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Section title=\"Let's connect!\" body={body} />\r\n  );\r\n}\r\n\r\nexport default ConnectPanel;\r\n","import React from 'react';\r\nimport Section from '../Section';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\ninterface ExperienceEntryProps {\r\n  company: string;\r\n  companyLink: string;\r\n  role: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  jobScope: string[];\r\n}\r\n\r\nconst experienceList: ExperienceEntryProps[] = [\r\n  {\r\n    company: \"Shopee\",\r\n    companyLink: \"https://careers.shopee.sg/about/\",\r\n    role: \"Software Engineer\",\r\n    startDate: \"April 2020\",\r\n    endDate: \"Present\",\r\n    jobScope: [\r\n      \"Write performant, maintainable and highly scalable code for production and internal projects\",\r\n      \"Design and implement supporting tools for internal teams\",\r\n      \"Analyse and develop functionalities based on project requirements\"\r\n    ]\r\n  },\r\n  {\r\n    company: \"TinyMOS\",\r\n    companyLink: \"https://www.facebook.com/thetinymos/\",\r\n    role: \"Software Engineer\",\r\n    startDate: \"May 2018\",\r\n    endDate: \"Feb 2020\",\r\n    jobScope: [\r\n      \"Developed and shipped mobile companion applications for TINY1 and NANO1 on Apple's AppStore and Google's Play Store\",\r\n      \"Developed and shipped image conversion tool that converts RAW images from TINY1 or NANO1 to other image format for macOS and Windows\",\r\n      \"Maintained camera firmware and implemented new camera features requested by backers to improve user experience\",\r\n      \"Developed and delivered software to support custom camera hardware for B2B clients\",\r\n      \"Set up CI/CD pipeline for internal use using off-the-shelf software and consumer level hardware\"\r\n    ]\r\n  },\r\n  {\r\n    company: \"Acronis\",\r\n    companyLink: \"https://www.acronis.com/\",\r\n    role: \"Research Development Intern\",\r\n    startDate: \"May 2019\",\r\n    endDate: \"August 2019\",\r\n    jobScope: [\r\n      \"Researched and implemented security features for backend components for increased security\",\r\n      \"Contributed to converting existing stateful components to stateless components for increased scalability and maintainability\",\r\n      \"Wrote integration tests for backend components to ensure system stability\"\r\n    ]\r\n  },\r\n  {\r\n    company: \"Springloaded\",\r\n    companyLink: \"https://www.springloadedsoftware.com/\",\r\n    role: \"Game Developer\",\r\n    startDate: \"August 2016\",\r\n    endDate: \"May 2018\",\r\n    jobScope: [\r\n      \"Developed and maintained new and existing game servers on Amazon Web Services\",\r\n      \"Developed ads integration library and in-app purchase library for mobile games on iOS and Android\",\r\n      \"Built and maintained cross-platform common libraries for easy integration into mobile games\",\r\n      \"Worked closely with game designers and programmers to develop game features\",\r\n      \"Implemented new features for in-ho`use game engine to boost productivity of game programmers and designers\"\r\n    ]\r\n  }\r\n];\r\n\r\nfunction ExperiencePanel() {\r\n  const body = (\r\n    <Tab.Container defaultActiveKey={experienceList[0].company}>\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Nav variant=\"pills\" className=\"flex-column\">\r\n            {\r\n              experienceList.map((value, _) => {\r\n                return (\r\n                  <Nav.Item>\r\n                    <Nav.Link eventKey={value.company} style={{backgroundColor: \"transparent\"}}>{value.company}</Nav.Link>\r\n                  </Nav.Item>\r\n                );\r\n              })\r\n            }\r\n          </Nav>\r\n        </Col>\r\n        <Col sm={9}>\r\n          <Tab.Content>\r\n            {\r\n              experienceList.map((value, _) => {\r\n                return (\r\n                  <Tab.Pane eventKey={value.company}>\r\n                    <h4>{value.role} @ <a href={value.companyLink} style={{color: \"#00ADB5\"}}>{value.company}</a></h4>\r\n                    <h6>{value.startDate} - {value.endDate}</h6>\r\n                    <ul>\r\n                      {\r\n                        value.jobScope.map((value, index) => {\r\n                          return <li key={index}>{value}</li>;\r\n                        })\r\n                      }\r\n                    </ul>\r\n                  </Tab.Pane>\r\n                );\r\n              })\r\n            }\r\n          </Tab.Content>\r\n        </Col>\r\n      </Row>\r\n    </Tab.Container>\r\n  );\r\n\r\n  return (\r\n    <Section title=\"Experience\" body={body} />\r\n  );\r\n}\r\n\r\nexport default ExperiencePanel;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container className=\"footer\">\r\n      <h5>\r\n        Designed and built by Jeffrey Ooi\r\n      </h5>\r\n      <p>\r\n        Made with ❤️ using react-bootstrap\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#\">JO</Navbar.Brand>\r\n      {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n      <Navbar.Collapse id=\"navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"#about\">About</Nav.Link>\r\n          <Nav.Link href=\"#experiences\">Experiences</Nav.Link>\r\n          <Nav.Link href=\"#connect\">Connect</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse> */}\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport ProfileImage from '../../assets/image.jpg';\r\n\r\nfunction Hero() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"auto\">\r\n          <Image src={ProfileImage} roundedCircle height=\"256px\"/>\r\n        </Col>\r\n        <Col className=\"my-auto\">\r\n          <h5>Hello,</h5>\r\n          <h1>\r\n            I'm Jeffrey Ooi\r\n          </h1>\r\n          <h4>\r\n            Software Engineer and Mobile App Developer based in Singapore\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\nimport './custom.scss';\nimport About from './component/section/About';\nimport ConnectPanel from './component/section/Connect';\nimport ExperiencePanel from './component/section/Experience';\nimport Footer from './component/section/Footer';\nimport Header from './component/section/Header';\nimport Hero from './component/section/Hero';\nimport Projects from './component/section/Projects';\nimport Technologies from './component/section/Skills';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{background: \"#222831\"}}>\n      <Header />\n      <Hero />\n      <About />\n      <ExperiencePanel />\n      {/* <Technologies /> */}\n      {/* <Projects /> */}\n      <ConnectPanel />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}